def func4(arg33, arg34):
    var39 = func5(arg34, arg33)
    var43 = func6(arg33, var39)
    var44 = func10()
    if arg33 < var43:
        var49 = class11()
    else:
        var49 = class13()
    for var50 in range(31):
        var51 = var49.func12
        var51(var50, var39)
    var52 = ((990990785 ^ var43) + arg33 ^ var43 | var44 - -961) + 659 | (((var39 + (var43 + 332235046)) ^ 1338805820 + (-910 + ((arg33 | (var44 & var44) - arg34 | arg33 & arg33 - var44) - var43)) + var39) - arg34)
    var53 = -1172503861 & (arg34 ^ arg33)
    var54 = (var52 & var52 + var53) | (-504864806 ^ (var52 | var39) ^ var53)
    var55 = ((var54 ^ arg33) | (var54 - 346179321)) & var53
    result = (var44 & -2107590202 & 410 ^ ((130122826 | var43 & (var44 + var53) + var39 - var52) ^ arg33)) ^ var52 | var44
    return result
class class13(object):
    def func12(self, arg47, arg48):
        result = -1741358149 ^ -751136570
        return result
class class11(object):
    def func12(self, arg45, arg46):
        return 0
def func10():
    func8()
    result = len(range(31))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
def func5(arg35, arg36):
    var37 = 0
    for var38 in xrange(16):
        var37 += arg36 | (var38 - arg35)
    return var37
def func2(arg3, arg4):
    var9 = func3(arg3, arg4)
    var10 = arg3 & var9 | arg3 & var9
    var11 = 453 + arg4
    var12 = 1119421877 | -149996236
    var13 = (-354 - arg4) | var10 ^ var11
    var14 = (var10 & var12 - 542) ^ 144
    var15 = ((var14 - var11) + arg3) ^ var9
    var16 = 280243120 + (arg3 + arg4) + var11
    var17 = (var16 & arg3) | var9 ^ var16
    var18 = ((var10 - 533990724) - var13) & var14
    var19 = var18 & arg3 ^ var9 + var18
    var20 = var12 & var9 + arg3 + var10
    if var13 < var10:
        var21 = var12 & var20
    else:
        var21 = var17 - var18 + var12 + arg3
    var22 = (var16 ^ var15 & var19) | var14
    if var9 < var14:
        var23 = var17 ^ var9
    else:
        var23 = var18 - (-416680563 & (var15 + var10))
    var24 = (var19 ^ var11) ^ arg4 | var12
    var25 = (var11 - var12) ^ var18
    var26 = var15 & (var18 | arg4)
    var27 = 934 | var24
    var28 = var9 + (var27 - var11)
    var29 = var24 - var20 ^ var18 + var12
    var30 = var13 & (var17 | arg3 - var28)
    if var29 < var20:
        var31 = var27 - var28
    else:
        var31 = var12 & var24
    var32 = (var12 - var16) & var27 + var14
    result = arg4 - var22 | ((var10 ^ var24 - var30) & ((((var19 - var13) - arg4) & var28) | var15 ^ var25 + var25))
    return result
def func3(arg5, arg6):
    var7 = 193 ^ (arg5 ^ (1413454650 - ((arg5 | 140 & (((arg6 & arg6 - (arg5 & arg6 ^ 791 ^ (arg5 ^ ((arg6 & arg6) + arg6 | arg6 + 1441124496)))) - arg5) | arg6)) | arg5)) ^ arg5 | 579 | arg6)
    if arg5 < arg6:
        var8 = (((var7 | 726278833) ^ arg5 | (var7 | arg6 | (253 + arg6 | arg5)) & arg6 & arg5) & -979709806 ^ var7) ^ -223536099
    else:
        var8 = 510 ^ arg6 | 100
    result = -947 - var7
    return result
def func1(arg1, arg2):
    result = 50 + (((-223 & arg2) & ((-70 ^ (arg2 + -181) | arg2) ^ arg2) & arg1) & arg1 & 187) & -70
    return result
def func6(arg40, arg41):
    def func7(acc, rest):
        var42 = rest - -7 + 8
        if acc == 0:
            return var42
        else:
            result = func7(acc - 1, var42)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 3'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
